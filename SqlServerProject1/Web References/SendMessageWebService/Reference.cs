//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.3625
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 2.0.50727.3625 版自动生成。
// 
#pragma warning disable 1591

namespace SqlServerProject1.SendMessageWebService {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebServiceInterfaceSoap", Namespace="http://tempuri.org/")]
    public partial class WebServiceInterface : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebServiceInterface() {
            this.Url = "http://jiekou.56dxw.com/WebServiceInterface.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UserLogin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UserLogin(string userName, string password, string cid) {
            object[] results = this.Invoke("UserLogin", new object[] {
                        userName,
                        password,
                        cid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUserLogin(string userName, string password, string cid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UserLogin", new object[] {
                        userName,
                        password,
                        cid}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndUserLogin(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EditUserPwd", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int EditUserPwd(string username, string userpwd, string newpwd, string cid) {
            object[] results = this.Invoke("EditUserPwd", new object[] {
                        username,
                        userpwd,
                        newpwd,
                        cid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginEditUserPwd(string username, string userpwd, string newpwd, string cid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("EditUserPwd", new object[] {
                        username,
                        userpwd,
                        newpwd,
                        cid}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndEditUserPwd(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReturnUserFullMoney", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ReturnUserFullMoney(string username, string password, string cid) {
            object[] results = this.Invoke("ReturnUserFullMoney", new object[] {
                        username,
                        password,
                        cid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReturnUserFullMoney(string username, string password, string cid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ReturnUserFullMoney", new object[] {
                        username,
                        password,
                        cid}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndReturnUserFullMoney(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendNote", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SendNote(string handtels, string _content, string userName, string password, string cid, string _sendtime, string _smsnumber) {
            object[] results = this.Invoke("SendNote", new object[] {
                        handtels,
                        _content,
                        userName,
                        password,
                        cid,
                        _sendtime,
                        _smsnumber});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSendNote(string handtels, string _content, string userName, string password, string cid, string _sendtime, string _smsnumber, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SendNote", new object[] {
                        handtels,
                        _content,
                        userName,
                        password,
                        cid,
                        _sendtime,
                        _smsnumber}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSendNote(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FullMoney", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string FullMoney(string aid, string aname, string apwd, string userid, string username, string tomoney, string action) {
            object[] results = this.Invoke("FullMoney", new object[] {
                        aid,
                        aname,
                        apwd,
                        userid,
                        username,
                        tomoney,
                        action});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFullMoney(string aid, string aname, string apwd, string userid, string username, string tomoney, string action, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FullMoney", new object[] {
                        aid,
                        aname,
                        apwd,
                        userid,
                        username,
                        tomoney,
                        action}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndFullMoney(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NoteBack", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NoteBack(string _cid, string _username, string _userpwd, string zid, string action) {
            object[] results = this.Invoke("NoteBack", new object[] {
                        _cid,
                        _username,
                        _userpwd,
                        zid,
                        action});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginNoteBack(string _cid, string _username, string _userpwd, string zid, string action, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("NoteBack", new object[] {
                        _cid,
                        _username,
                        _userpwd,
                        zid,
                        action}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndNoteBack(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddNewUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddNewUser(string aid, string auserName, string apwd, string nusername, string npwd, string customername, string customertel, string customerqq, string customeremaill, string Sright) {
            object[] results = this.Invoke("AddNewUser", new object[] {
                        aid,
                        auserName,
                        apwd,
                        nusername,
                        npwd,
                        customername,
                        customertel,
                        customerqq,
                        customeremaill,
                        Sright});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddNewUser(string aid, string auserName, string apwd, string nusername, string npwd, string customername, string customertel, string customerqq, string customeremaill, string Sright, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddNewUser", new object[] {
                        aid,
                        auserName,
                        apwd,
                        nusername,
                        npwd,
                        customername,
                        customertel,
                        customerqq,
                        customeremaill,
                        Sright}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndAddNewUser(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
}

#pragma warning restore 1591